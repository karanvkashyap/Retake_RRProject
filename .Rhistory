styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
#New Survey Data
#first combine the rf predictions and actual scores in a single data frame
rfpltdata1=data.frame(cbind(rf.predictions,data_combine_norepeats[,"avggrades"]))
varImpPlot(randfor,type=1)
#Original data
d1 <- read.table("student-mat.csv",sep=",",header=TRUE) #Reading Math data set
d2 <- read.table("student-por.csv",sep=",",header=TRUE) #Reading Portuguese data set
#New survey data
data_english <- read.table("Student_English.csv",sep=",",header=TRUE) #Reading English data set
data_maths <- read.table("Student_Maths.csv",sep=",",header=TRUE) #Reading Maths data set
#Column rename
colnames(data_maths)[1] <- "school"   #Renaming "schoo" column name as it was incorrect format when uploaded from csv file.
colnames(data_english)[1] <- "school"
#merging Original data sets by common columns into single Data set
data.source=merge(d1,d2,by=c("school","sex","age","address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet", "guardian","guardian","traveltime","studytime","failures", "schoolsup","famsup","activities","higher","romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health", "absences"))
head(data.source)
#merging New data sets by common columns into single Data set
new_data.source=merge(data_english,data_maths,by=c("school","sex","age","address","famsize","Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet", "guardian", "guardian", "traveltime", "studytime", "failures", "schoolsup", "famsup", "activities", "higher", "romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health", "absences"))
head(new_data.source)
# In this we have merged grade from period/semester 1 + period 2 + period 3 and calculated the mean of the grade using rowMean function, we did this separately for math grade and Portuguese grade.
data.source$mathgrades <- rowMeans(cbind(data.source$G1.x, data.source$G2.x, data.source$G3.x))
data.source$portgrades <- rowMeans(cbind(data.source$G1.y, data.source$G2.y, data.source$G3.y))
data.source$Dalc <- as.factor(data.source$Dalc)
data.source$Dalc <- mapvalues(data.source$Dalc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
str1 <- ggplot(data.source, aes(x = mathgrades, y = portgrades)) +
geom_point(aes(colour = factor(Dalc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
data.source$Walc <- as.factor(data.source$Walc)
data.source$Walc <- mapvalues(data.source$Walc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
str2 <- ggplot(data.source, aes(x = mathgrades, y = portgrades)) +
geom_point(aes(colour = factor(Walc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
########################################################################
new_data.source$mathgrades <- rowMeans(cbind(new_data.source$G1.x, new_data.source$G2.x, new_data.source$G3.x))
new_data.source$enggrades <- rowMeans(cbind(new_data.source$G1.y, new_data.source$G2.y, new_data.source$G3.y))
new_data.source$Dalc <- as.factor(new_data.source$Dalc)
new_data.source$Dalc <- mapvalues(new_data.source$Dalc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
new_str1 <- ggplot(new_data.source, aes(x = mathgrades, y = enggrades)) +
geom_point(aes(colour = factor(Dalc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
new_data.source$Walc <- as.factor(new_data.source$Walc)
new_data.source$Walc <- mapvalues(new_data.source$Walc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
new_str2 <- ggplot(new_data.source, aes(x = mathgrades, y = enggrades)) +
geom_point(aes(colour = factor(Walc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(str1, new_str1, str2, new_str2, nrow = 2)
d3<-rbind(d1,d2) #combine the two datasets
# and eliminate the repeats:
d3norepeats<-d3 %>% distinct(school,sex,age,address,famsize,Pstatus,
Medu,Fedu,Mjob,Fjob,reason,
guardian,traveltime,studytime,failures,
schoolsup, famsup,activities,nursery,higher,internet,
romantic,famrel,freetime,goout,Dalc,Walc,health,absences, .keep_all = TRUE)
#add a column with average grades (math or Portuguese, whichever is available)
d3norepeats$avggrades=rowMeans(cbind(d3norepeats$G1,d3norepeats$G2,d3norepeats$G3))
# and drop grades in 3 marking periods.
d3norepeats<-d3norepeats[,-(31:33)]
# New Survey Data
data_combine <- rbind(data_english, data_maths) # combine the two datasets
# and eliminate the repeats:
data_combine_norepeats <- data_combine %>% distinct(school, sex, age, address, famsize, Pstatus,
Medu, Fedu, Mjob, Fjob, reason,
guardian, traveltime, studytime, failures,
schoolsup, famsup, activities, nursery, higher, internet,
romantic, famrel, freetime, goout, Dalc, Walc, health, absences,
.keep_all = TRUE
)
# add a column with average grades (math or Portuguese, whichever is available)
data_combine_norepeats$avggrades <- rowMeans(cbind(data_combine_norepeats$G1, data_combine_norepeats$G2, data_combine_norepeats$G3))
# and drop grades in 3 marking periods.
data_combine_norepeats <- data_combine_norepeats[, -(31:33)]
ggplot(d3norepeats, aes(x = Dalc, y = avggrades, group = Dalc)) +
geom_boxplot() +
theme(legend.position = "none") +
# scale_fill_manual(values=waffle.col)+
xlab("Daily Alcohol consumption") +
ylab("Average Grades") +
ggtitle("Average Grade (Original Study)")
# New Survey Data
ggplot(data_combine_norepeats, aes(x = Dalc, y = avggrades, group = Dalc)) +
geom_boxplot() +
theme(legend.position = "none") +
# scale_fill_manual(values=waffle.col)+
xlab("Daily Alcohol consumption") +
ylab("Average Grades") +
ggtitle("Average Grade (Reproducible Survey)")
failureind<-which(names(d3norepeats)=="failures")
d3norepeats<-d3norepeats[,-failureind]
# 1) multiple regression
lm2<-lm(avggrades~., data=d3norepeats[,1:30])
summary(lm2)
# predictions
rt2 <- rpart(avggrades ~ ., data = d3norepeats[, 1:30])
lm.predictions <- predict(lm2, d3norepeats)
rt.predictions <- predict(rt2, d3norepeats)
nmse.lm <- mean((lm.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
nmse.rt <- mean((rt.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
print(nmse.lm) # 0.79
print(nmse.rt) # 0.85
#New Survey Data
failureind<-which(names(data_combine_norepeats)=="failures")
data_combine_norepeats<-data_combine_norepeats[,-failureind]
# 1) multiple regression
lm2<-lm(avggrades~., data=data_combine_norepeats[,1:30])
summary(lm2)
#New Survey Data
#predictions
rt2 <- rpart(avggrades ~ ., data = data_combine_norepeats[, 1:30])
lm.predictions <- predict(lm2, data_combine_norepeats)
rt.predictions <- predict(rt2, data_combine_norepeats)
nmse.lm <- mean((lm.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
nmse.rt <- mean((rt.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
print(nmse.lm) # 0.79
print(nmse.rt) # 0.85
lmpltdata1 <- data.frame(cbind(lm.predictions, d3norepeats[, "avggrades"]))
colnames(lmpltdata1) <- c("lm.predictions", "avggrades")
rtpltdata1 <- data.frame(cbind(rt.predictions, d3norepeats[, "avggrades"]))
colnames(rtpltdata1) <- c("rt.predictions", "avggrades")
d3norepeats$Dalc <- as.factor(d3norepeats$Dalc)
errplt.lt1 <- ggplot(lmpltdata1, aes(lm.predictions, avggrades)) +
geom_point(aes(color = d3norepeats[, "Dalc"])) +
xlab("Predicted Grades (Linear Model)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
errplt.rt1 <- ggplot(rtpltdata1, aes(rt.predictions, avggrades)) +
geom_point(aes(color = d3norepeats[, "Dalc"])) +
xlab("Predicted Grades (Regression Tree)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
grid.arrange(errplt.lt1, errplt.rt1, nrow = 2)
library(randomForest)
set.seed(4543)
rf2 <- randomForest(avggrades ~ ., data = d3norepeats[, 1:30], ntree = 500, importance = T)
rf.predictions <- predict(rf2, d3norepeats)
nmse.rf <- mean((rf.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
print(nmse.rf) # 0.2
#New Survey Data
lmpltdata1 <- data.frame(cbind(lm.predictions, data_combine_norepeats[, "avggrades"]))
colnames(lmpltdata1) <- c("lm.predictions", "avggrades")
rtpltdata1 <- data.frame(cbind(rt.predictions, data_combine_norepeats[, "avggrades"]))
colnames(rtpltdata1) <- c("rt.predictions", "avggrades")
data_combine_norepeats$Dalc <- as.factor(data_combine_norepeats$Dalc)
errplt.lt1 <- ggplot(lmpltdata1, aes(lm.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Linear Model)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
errplt.rt1 <- ggplot(rtpltdata1, aes(rt.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Regression Tree)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
grid.arrange(errplt.lt1, errplt.rt1, nrow = 2)
library(randomForest)
set.seed(4543)
randfor <- randomForest(avggrades ~ ., data = data_combine_norepeats[, 1:30], ntree = 500, importance = T)
rf.predictions <- predict(randfor, data_combine_norepeats)
nmse.rf <- mean((rf.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
print(nmse.rf) # 0.2
# first combine the rf predictions and actual scores in a single data frame
rfpltdata1 <- data.frame(cbind(rf.predictions, d3norepeats[, "avggrades"]))
colnames(rfpltdata1) <- c("rf.predictions", "avggrades")
# then create the error plot.
errplt.rf1<-ggplot(rfpltdata1,aes(rf.predictions,avggrades))+
geom_point(aes(color=d3norepeats[,"Dalc"]))+
xlab("Predicted Grades (Random Forest with 500 Trees)")+
ylab("Actual Grades")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)+
#geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1",name = "Daily Alcohol \nConsumption")
#finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.
grid.arrange(errplt.rf1, errplt.lt1,errplt.rt1,nrow=3)
#New Survey Data
#first combine the rf predictions and actual scores in a single data frame
rfpltdata1=data.frame(cbind(rf.predictions,data_combine_norepeats[,"avggrades"]))
colnames(rfpltdata1)<-c("rf.predictions","avggrades")
# then create the error plot.
errplt.rf1 <- ggplot(rfpltdata1, aes(rf.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Random Forest with 500 Trees)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
# finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.
grid.arrange(errplt.rf1, errplt.lt1, errplt.rt1, nrow = 3)
varImpPlot(randfor,type=1)
library(knitr)
kable(new_data.source[1:5,], caption = "New Data set")
#merging Original data sets by common columns into single Data set
data.source=merge(d1,d2,by=c("school","sex","age","address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet", "guardian","guardian","traveltime","studytime","failures", "schoolsup","famsup","activities","higher","romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health", "absences"))
library(knitr)
kable(data.source[1:5,], caption = "New Data set")
library(knitr)
kable(data.source[1:5,], caption = "New Data set")
library(knitr)
kable(new_data.source[1:5,], caption = "New Data set")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(gridExtra)
library(alluvial)
library(extrafont)
library(readr)
library(rpart)
library(waffle)
library(party)
library(randomForest)
install.packages("styler")
library(styler)
#Original data
d1 <- read.table("student-mat.csv",sep=",",header=TRUE) #Reading Math data set
d2 <- read.table("student-por.csv",sep=",",header=TRUE) #Reading Portuguese data set
#New survey data
data_english <- read.table("Student_English.csv",sep=",",header=TRUE) #Reading English data set
data_maths <- read.table("Student_Maths.csv",sep=",",header=TRUE) #Reading Maths data set
#Column rename
colnames(data_maths)[1] <- "school"   #Renaming "school" column name as it was incorrect format when uploaded from csv file.
colnames(data_english)[1] <- "school"
#merging Original data sets by common columns into single Data set
data.source=merge(d1,d2,by=c("school","sex","age","address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet", "guardian","guardian","traveltime","studytime","failures", "schoolsup","famsup","activities","higher","romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health", "absences"))
library(knitr)
kable(data.source[1:5,], caption = "New Data set")
#merging New data sets by common columns into single Data set
new_data.source=merge(data_english,data_maths,by=c("school","sex","age","address","famsize","Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet", "guardian", "guardian", "traveltime", "studytime", "failures", "schoolsup", "famsup", "activities", "higher", "romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health", "absences"))
library(knitr)
kable(new_data.source[1:5,], caption = "New Data set")
# In this we have merged grade from period/semester 1 + period 2 + period 3 and calculated the mean of the grade using rowMean function, we did this separately for math grade and Portuguese grade.
data.source$mathgrades <- rowMeans(cbind(data.source$G1.x, data.source$G2.x, data.source$G3.x))
data.source$portgrades <- rowMeans(cbind(data.source$G1.y, data.source$G2.y, data.source$G3.y))
data.source$Dalc <- as.factor(data.source$Dalc)
data.source$Dalc <- mapvalues(data.source$Dalc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
str1 <- ggplot(data.source, aes(x = mathgrades, y = portgrades)) +
geom_point(aes(colour = factor(Dalc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
data.source$Walc <- as.factor(data.source$Walc)
data.source$Walc <- mapvalues(data.source$Walc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
str2 <- ggplot(data.source, aes(x = mathgrades, y = portgrades)) +
geom_point(aes(colour = factor(Walc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
########################################################################
new_data.source$mathgrades <- rowMeans(cbind(new_data.source$G1.x, new_data.source$G2.x, new_data.source$G3.x))
new_data.source$enggrades <- rowMeans(cbind(new_data.source$G1.y, new_data.source$G2.y, new_data.source$G3.y))
new_data.source$Dalc <- as.factor(new_data.source$Dalc)
new_data.source$Dalc <- mapvalues(new_data.source$Dalc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
new_str1 <- ggplot(new_data.source, aes(x = mathgrades, y = enggrades)) +
geom_point(aes(colour = factor(Dalc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
new_data.source$Walc <- as.factor(new_data.source$Walc)
new_data.source$Walc <- mapvalues(new_data.source$Walc,
from = 1:5,
to = c("Very Low", "Low", "Medium", "High", "Very High")
)
new_str2 <- ggplot(new_data.source, aes(x = mathgrades, y = enggrades)) +
geom_point(aes(colour = factor(Walc))) +
scale_colour_hue(l = 25, c = 150) +
geom_smooth(method = "lm", se = FALSE)
grid.arrange(str1, new_str1, str2, new_str2, nrow = 2)
d3<-rbind(d1,d2) #combine the two datasets
# and eliminate the repeats:
d3norepeats<-d3 %>% distinct(school,sex,age,address,famsize,Pstatus,
Medu,Fedu,Mjob,Fjob,reason,
guardian,traveltime,studytime,failures,
schoolsup, famsup,activities,nursery,higher,internet,
romantic,famrel,freetime,goout,Dalc,Walc,health,absences, .keep_all = TRUE)
#add a column with average grades (math or Portuguese, whichever is available)
d3norepeats$avggrades=rowMeans(cbind(d3norepeats$G1,d3norepeats$G2,d3norepeats$G3))
# and drop grades in 3 marking periods.
d3norepeats<-d3norepeats[,-(31:33)]
# New Survey Data
data_combine <- rbind(data_english, data_maths) # combine the two datasets
# and eliminate the repeats:
data_combine_norepeats <- data_combine %>% distinct(school, sex, age, address, famsize, Pstatus,
Medu, Fedu, Mjob, Fjob, reason,
guardian, traveltime, studytime, failures,
schoolsup, famsup, activities, nursery, higher, internet,
romantic, famrel, freetime, goout, Dalc, Walc, health, absences,
.keep_all = TRUE
)
# add a column with average grades (math or Portuguese, whichever is available)
data_combine_norepeats$avggrades <- rowMeans(cbind(data_combine_norepeats$G1, data_combine_norepeats$G2, data_combine_norepeats$G3))
# and drop grades in 3 marking periods.
data_combine_norepeats <- data_combine_norepeats[, -(31:33)]
ggplot(d3norepeats, aes(x = Dalc, y = avggrades, group = Dalc)) +
geom_boxplot() +
theme(legend.position = "none") +
# scale_fill_manual(values=waffle.col)+
xlab("Daily Alcohol consumption") +
ylab("Average Grades") +
ggtitle("Average Grade (Original Study)")
# New Survey Data
ggplot(data_combine_norepeats, aes(x = Dalc, y = avggrades, group = Dalc)) +
geom_boxplot() +
theme(legend.position = "none") +
# scale_fill_manual(values=waffle.col)+
xlab("Daily Alcohol consumption") +
ylab("Average Grades") +
ggtitle("Average Grade (Reproducible Survey)")
install.packages("styler")
failureind<-which(names(d3norepeats)=="failures")
d3norepeats<-d3norepeats[,-failureind]
# 1) multiple regression
lm2<-lm(avggrades~., data=d3norepeats[,1:30])
summary(lm2)
# predictions
rt2 <- rpart(avggrades ~ ., data = d3norepeats[, 1:30])
lm.predictions <- predict(lm2, d3norepeats)
rt.predictions <- predict(rt2, d3norepeats)
nmse.lm <- mean((lm.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
nmse.rt <- mean((rt.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
print(nmse.lm) # 0.79
print(nmse.rt) # 0.85
#New Survey Data
failureind<-which(names(data_combine_norepeats)=="failures")
data_combine_norepeats<-data_combine_norepeats[,-failureind]
# 1) multiple regression
lm2<-lm(avggrades~., data=data_combine_norepeats[,1:30])
summary(lm2)
#New Survey Data
#predictions
rt2 <- rpart(avggrades ~ ., data = data_combine_norepeats[, 1:30])
lm.predictions <- predict(lm2, data_combine_norepeats)
rt.predictions <- predict(rt2, data_combine_norepeats)
nmse.lm <- mean((lm.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
nmse.rt <- mean((rt.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
print(nmse.lm) # 0.79
print(nmse.rt) # 0.85
lmpltdata1 <- data.frame(cbind(lm.predictions, d3norepeats[, "avggrades"]))
colnames(lmpltdata1) <- c("lm.predictions", "avggrades")
rtpltdata1 <- data.frame(cbind(rt.predictions, d3norepeats[, "avggrades"]))
colnames(rtpltdata1) <- c("rt.predictions", "avggrades")
d3norepeats$Dalc <- as.factor(d3norepeats$Dalc)
errplt.lt1 <- ggplot(lmpltdata1, aes(lm.predictions, avggrades)) +
geom_point(aes(color = d3norepeats[, "Dalc"])) +
xlab("Predicted Grades (Linear Model)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
errplt.rt1 <- ggplot(rtpltdata1, aes(rt.predictions, avggrades)) +
geom_point(aes(color = d3norepeats[, "Dalc"])) +
xlab("Predicted Grades (Regression Tree)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
grid.arrange(errplt.lt1, errplt.rt1, nrow = 2)
library(randomForest)
set.seed(4543)
rf2 <- randomForest(avggrades ~ ., data = d3norepeats[, 1:30], ntree = 500, importance = T)
rf.predictions <- predict(rf2, d3norepeats)
nmse.rf <- mean((rf.predictions - d3norepeats[, "avggrades"])^2) / mean((mean(d3norepeats$avggrades) - d3norepeats[, "avggrades"])^2)
print(nmse.rf) # 0.2
#New Survey Data
lmpltdata1 <- data.frame(cbind(lm.predictions, data_combine_norepeats[, "avggrades"]))
colnames(lmpltdata1) <- c("lm.predictions", "avggrades")
rtpltdata1 <- data.frame(cbind(rt.predictions, data_combine_norepeats[, "avggrades"]))
colnames(rtpltdata1) <- c("rt.predictions", "avggrades")
data_combine_norepeats$Dalc <- as.factor(data_combine_norepeats$Dalc)
errplt.lt1 <- ggplot(lmpltdata1, aes(lm.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Linear Model)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
errplt.rt1 <- ggplot(rtpltdata1, aes(rt.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Regression Tree)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
grid.arrange(errplt.lt1, errplt.rt1, nrow = 2)
library(randomForest)
set.seed(4543)
randfor <- randomForest(avggrades ~ ., data = data_combine_norepeats[, 1:30], ntree = 500, importance = T)
rf.predictions <- predict(randfor, data_combine_norepeats)
nmse.rf <- mean((rf.predictions - data_combine_norepeats[, "avggrades"])^2) / mean((mean(data_combine_norepeats$avggrades) - data_combine_norepeats[, "avggrades"])^2)
print(nmse.rf) # 0.2
# first combine the rf predictions and actual scores in a single data frame
rfpltdata1 <- data.frame(cbind(rf.predictions, d3norepeats[, "avggrades"]))
colnames(rfpltdata1) <- c("rf.predictions", "avggrades")
# then create the error plot.
errplt.rf1<-ggplot(rfpltdata1,aes(rf.predictions,avggrades))+
geom_point(aes(color=d3norepeats[,"Dalc"]))+
xlab("Predicted Grades (Random Forest with 500 Trees)")+
ylab("Actual Grades")+
geom_abline(intercept=0,slope=1,color="#0066CC",size=1)+
#geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1",name = "Daily Alcohol \nConsumption")
#finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.
grid.arrange(errplt.rf1, errplt.lt1,errplt.rt1,nrow=3)
varImpPlot(rf2,type=1)
#New Survey Data
#first combine the rf predictions and actual scores in a single data frame
rfpltdata1=data.frame(cbind(rf.predictions,data_combine_norepeats[,"avggrades"]))
colnames(rfpltdata1)<-c("rf.predictions","avggrades")
# then create the error plot.
errplt.rf1 <- ggplot(rfpltdata1, aes(rf.predictions, avggrades)) +
geom_point(aes(color = data_combine_norepeats[, "Dalc"])) +
xlab("Predicted Grades (Random Forest with 500 Trees)") +
ylab("Actual Grades") +
geom_abline(intercept = 0, slope = 1, color = "#0066CC", size = 1) +
# geom_smooth(method = "lm", se = FALSE)+
scale_colour_brewer(palette = "Set1", name = "Daily Alcohol \nConsumption")
# finally, plot the error plot from the random forest with the error plots of the linear and regression tree models.
grid.arrange(errplt.rf1, errplt.lt1, errplt.rt1, nrow = 3)
varImpPlot(randfor,type=1)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(gridExtra)
library(alluvial)
library(extrafont)
library(readr)
library(rpart)
library(waffle)
library(party)
library(randomForest)
library(styler)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(gridExtra)
library(alluvial)
library(extrafont)
library(readr)
library(rpart)
library(waffle)
library(party)
library(randomForest)
library(styler)
kable(data.source[1:5,], caption = "New Data set")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plyr)
library(dplyr)
library(gridExtra)
library(alluvial)
library(extrafont)
library(readr)
library(rpart)
library(waffle)
library(party)
library(randomForest)
library(styler)
library(knitr)
library(knitr)
kable(new_data.source[1:5,], caption = "New Data set")
library(knitr)
kable(new_data.source[1:5,], caption = "New Data set")
kable(data.source[1:5,], caption = "New Data set")
#Original data
d1 <- read.table("student-mat.csv",sep=",",header=TRUE) #Reading Math data set
d2 <- read.table("student-por.csv",sep=",",header=TRUE) #Reading Portuguese data set
#New survey data
data_english <- read.table("Student_English.csv",sep=",",header=TRUE) #Reading English data set
data_maths <- read.table("Student_Maths.csv",sep=",",header=TRUE) #Reading Maths data set
#Column rename
colnames(data_maths)[1] <- "school"   #Renaming "school" column name as it was incorrect format when uploaded from csv file.
colnames(data_english)[1] <- "school"
View(data.source)
